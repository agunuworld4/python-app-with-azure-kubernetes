# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8ed90a2c-9650-4d31-ba47-207c7148fee8'
  imageRepository: 'agunuworldpythonappdev4'
  containerRegistry: 'aksxyzcontainer.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/python-application/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:  
    - job: Build
      displayName: Build
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tag)
      - upload: manifests
        artifact: manifests

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build

    jobs:
    - deployment: Deploy
      displayName: Deploy
      pool:
        vmImage: $(vmImageName)
      environment: Dev4
      strategy:
        runOnce:
          deploy:
            steps:
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                secretName: $(imagePullSecret)
                dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
                
            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'Dev4-aksk8s-default-1596413715921'
                namespace: 'default'
                manifests: '$(Pipeline.Workspace)/manifests/app.yml'
                containers: '$(containerRegistry)/$(imageRepository):$(tag)'
                imagePullSecrets: '$(imagePullSecret)'